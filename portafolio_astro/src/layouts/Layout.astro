---
import '../styles/global.css';
import { ViewTransitions } from 'astro:transitions';
import type { LayoutProps } from '../types';

const { 
  title, 
  description = "Portafolio de Alexis Palacio — Full‑Stack y automatización con n8n, LLMs (Ollama/Router), MCP, Supabase y AWS"
} = Astro.props as LayoutProps;
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link rel="canonical" href="https://alexispalaciodev.github.io/portfolio/" />
    <meta property="og:url" content="https://alexispalaciodev.github.io/portfolio/" />
    <meta property="og:site_name" content="Alexis Palacio" />
    <ViewTransitions />
    <script>
      // Theme handling
      const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark';
        }
        return 'light';
      })();
      
      if (theme === 'light') {
        document.documentElement.classList.remove('dark');
      } else {
        document.documentElement.classList.add('dark');
      }

      window.localStorage.setItem('theme', theme);

      // Theme transition: instant change
      const handleThemeSwitch = () => {
        const element = document.documentElement;
        const isDark = element.classList.contains('dark');
        element.classList.toggle('dark');
        localStorage.setItem('theme', isDark ? 'light' : 'dark');
      };

      // Listen for toggle events dispatched from React header
      document.addEventListener('toggle-theme', handleThemeSwitch);

      document.addEventListener('astro:after-swap', () => {
        if (localStorage.getItem('theme') === 'dark') {
          document.documentElement.classList.add('dark');
        }
      });
    </script>
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:image" content="https://alexispalaciodev.github.io/portfolio/og-image.svg" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:image" content="https://alexispalaciodev.github.io/portfolio/og-image.svg" />
    <link rel="preconnect" href="https://s.wordpress.com" crossorigin>
    <link rel="preconnect" href="https://cdn.jsdelivr.net" crossorigin>
    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "Person",
        "name": "Alexis Palacio",
        "url": "https://alexispalaciodev.github.io/portfolio/",
        "jobTitle": "Full-Stack Developer | Automatización con n8n",
        "sameAs": [
          "https://github.com/alexispalaciodev",
          "https://www.linkedin.com/in/poisoneddog/"
        ]
      }
    </script>
    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "WebSite",
        "name": "Portafolio de Alexis Palacio",
        "url": "https://alexispalaciodev.github.io/portfolio/"
      }
    </script>
  </head>
  <body class="neo-surface">
    <div class="min-h-screen">
      <slot />
    </div>
  </body>
</html>
